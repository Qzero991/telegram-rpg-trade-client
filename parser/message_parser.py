from openai import AsyncOpenAI
from config import settings
import json


client = AsyncOpenAI(api_key=settings.deepseek_api_key, base_url=settings.deepseek_base_url)

async def create_request(message):

    response = await client.chat.completions.create(
        model="deepseek-chat",
        temperature=1.0,
        response_format={
            "type": "json_object"
        },
        messages=[
            {
                "role": "system",
                "content": prompt3
            },
            {
                "role": "user",
                "content": message
            }
        ]
    )

    print(response.choices[0].message.content)

    try:
        data = json.loads(response.choices[0].message.content)
        if isinstance(data, dict) and "items" in data:
            items = data["items"]
        elif isinstance(data, list):
            items = data
        else:
            print("–û–®–ò–ë–ö–ê. –ù–ï–ü–†–ê–í–ò–õ–¨–ù–´–ô –¢–ò–ü –û–¢–í–ï–¢–ê –û–¢ –ù–ï–ô–†–û–ù–ö–ò")
            return None
        items = [obj for obj in items if isinstance(obj['price_for_one'], int) and obj['currency'] in ("cookies", "money")]
        if items:
            return items
    except (json.JSONDecodeError, TypeError):
        print("–û–®–ò–ë–ö–ê. –ù–ï–ü–†–ê–í–ò–õ–¨–ù–´–ô –¢–ò–ü –û–¢–í–ï–¢–ê –û–¢ –ù–ï–ô–†–û–ù–ö–ò")
        return None






messages=[
            {
                "role": "system",
                "content": "–¢—ã ‚Äî –ø–∞—Ä—Å–µ—Ä —Å–æ–æ–±—â–µ–Ω–∏–π —Ç–æ—Ä–≥–æ–≤–æ–≥–æ —á–∞—Ç–∞ RPG-–∏–≥—Ä—ã. –ö–∞–∂–¥–æ–µ –≤—Ö–æ–¥—è—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–∫—É–ø–∫–µ,"
                           " –ø—Ä–æ–¥–∞–∂–µ –∏–ª–∏ –æ–±–µ–∏—Ö –æ–ø–µ—Ä–∞—Ü–∏—è—Ö —Å—Ä–∞–∑—É. –§–æ—Ä–º–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏–π –Ω–µ —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π, –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–∞–ø–∏—Å–∞–Ω –≤ —Å–≤–æ–±–æ–¥–Ω–æ–π —Ñ–æ—Ä–º–µ,"
                           " —Å –æ—à–∏–±–∫–∞–º–∏ –∏ —Å–æ–∫—Ä–∞—â–µ–Ω–∏—è–º–∏.\n\n–¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –≤–µ—Ä–Ω—É—Ç—å —Å—Ç—Ä–æ–≥–æ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π JSON —Å–æ —Å–ª–µ–¥—É—é—â–∏–º–∏ –ø–æ–ª—è–º–∏:"
                           "\n- item_name: –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞, –Ω–µ –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –≤–Ω—É—Ç—Ä–∏ —Å–µ–±—è –≥—Ä–µ–π–¥, –≤—Ä–µ–º—è –¥–µ–π—Å—Ç–≤–∏—è –∏ —Ç–¥, —Ç–æ–ª—å–∫–æ –Ω–∞–∑–≤–∞–Ω–∏–µ\n"
                           "- item_type: —Ç–∏–ø –ø—Ä–µ–¥–º–µ—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π —Ç—ã –¥–æ–ª–∂–µ–Ω –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Å–∞–º –∏–∑ –∫–æ–Ω–µ—Ç–∫—Å—Ç–∞, –µ—Å—Ç—å –≤—Å–µ–≥–æ –¥–≤–∞ –≤–∞—Ä–∏–∞–Ω—Ç–∞: \"RESOURCE\" –ª–∏–±–æ \"EQUIPMENT\"\n"
                           "- quantity: –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ (—Ü–µ–ª–æ–µ —á–∏—Å–ª–æ), –µ—Å–ª–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–µ —É–∫–∞–∑–∞–Ω–æ —è–≤–Ω–æ, —Ç–æ –∑–∞–¥–∞–≤–∞–π –∑–Ω–∞—á–µ–Ω–∏–µ -1\n- item_grade: –≥—Ä–µ–π–¥ –ø—Ä–µ–¥–º–µ—Ç–∞, –æ–±—ã—á–Ω–æ —É–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è —Ä–∏–º—Å–∫–∏–º–∏ "
                           "—Ü–∏—Ñ—Ä–∞–º–∏ –≤–Ω—É—Ç—Ä–∏ –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã—Ö —Å–∫–æ–±–æ–∫ [] –ª–∏–±–æ –ø–∏—à–µ—Ç—Å—è —Ä—è–¥–æ–º —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º –±–µ–∑ —Å–∫–æ–±–æ–∫, –µ—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è —è–≤–Ω–æ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –≥—Ä–µ–π–¥, —Ç–æ –ø–æ–¥—Å—Ç–∞–≤—å –∑–Ω–∞—á–µ–Ω–∏–µ: \"undefined\""
                           "\n- item_duration: –≤—Ä–µ–º—è –¥–µ–π—Å—Ç–≤–∏—è –ø—Ä–µ–¥–º–µ—Ç–∞, –æ–±—ã—á–Ω–æ —É–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è —Ä—è–¥–æ–º —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º. –ï—Å–ª–∏ –≤—Ä–µ–º–µ–Ω–∏ –¥–µ–π—Å—Ç–≤–∏—è, —Ç–æ —É–∫–∞–∂–∏ \"undefined\"\n"
                           "- price_for_one: —Ü–µ–Ω–∞ –∑–∞ –æ–¥–Ω—É —à—Ç—É–∫—É\n- offer_type: \"buy\" (–µ—Å–ª–∏ –ø–æ–∫—É–ø–∫–∞), \"sell\" (–µ—Å–ª–∏ –ø—Ä–æ–¥–∞–∂–∞)\n- currency: \"cookies\" –∏–ª–∏ \"money\"\n\n"
                           "–ï—Å–ª–∏ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏ –ø–æ–∫—É–ø–∫–∞, –∏ –ø—Ä–æ–¥–∞–∂–∞, –≤–µ—Ä–Ω–∏ –º–∞—Å—Å–∏–≤ –æ–±—ä–µ–∫—Ç–æ–≤, –∫–∞–∂–¥—ã–π —Å –æ—Ç–¥–µ–ª—å–Ω–æ–π –æ–ø–µ—Ä–∞—Ü–∏–µ–π."
                           "\n\n–í–æ–∑–≤—Ä–∞—â–∞–π **—Å—Ç—Ä–æ–≥–æ JSON**, –±–µ–∑ –ø–æ—è—Å–Ω–µ–Ω–∏–π, –±–µ–∑ –ª–∏—à–Ω–µ–≥–æ —Ç–µ–∫—Å—Ç–∞."
            }]




prompt3 = """You are a parser for messages from a Russian-language RPG game trading chat. 
Each incoming message may contain information about buying, selling, or both operations at once. 
The messages are free-form, may contain errors, abbreviations, emojis (such as üç™ or üí∞), and non-standard formatting.

Your task is to analyze the message and you must output your answer strictly as a JSON array of objects. Do not include any explanations, comments, or text outside of the JSON. 
Each element must be a valid JSON object. The output must be a valid JSON array structure that can be parsed without modification.". 
‚ö†Ô∏è Do not add any explanations or extra text. The JSON must be syntactically correct.

Rules for generating data:
- item_name: the name of the item (without grade, duration, or other extra info)
- quantity:
  - if the quantity is explicitly mentioned ‚Äî use that number
  - if the quantity is not mentioned ‚Äî use null
- item_grade: the item's grade. This is a Roman numeral that appears in the name of an object, usually in square brackets, but can also be without them, e.g. [II], [III], [III+] or II, III, III+. Always return it in square brackets, e.g., "[I]", "[II]", "[III]". 
  If the grade cannot be determined ‚Äî use "undefined"
- item_duration: the item's duration. You must output the full Russian form of time units ‚Äî for example, '3—á' ‚Üí '3 —á–∞—Å–∞', '30–º' ‚Üí '30 –º–∏–Ω—É—Ç'. If the time is written in English (e.g., '7d'), translate it into Russian ('7 –¥–Ω–µ–π'). If not specified ‚Äî use "undefined"
- price_for_one: the price per unit (integer).  If the price is missing, unclear, or cannot be confidently determined, do NOT create an object for this item.
- offer_type: "buy" or "sell"
- currency: "cookies" or "money"

If a message contains both a buy and a sell operation, return an array of objects, one for each operation.

Additional instructions:
- Be conservative: if you are not confident about the value of a field (especially price or quantity), do not create an object. 
- Only include items with clear and confidently identifiable prices.
- Handle Russian text correctly ‚Äî all analysis is done on the original Russian text, do not translate it.
- If you cannot find valid or reliable data, return only the text None.
- There may also be a situation where someone wants to sell or buy cookies - currency, for coins - another currency. 
 For such cases, treat it as a regular offer, where item_name is cookies.

Example:
Message: "–ü—Ä–æ–¥–∞–º –ú–µ—á —Ä—ã—Ü–∞—Ä—è [II] - 500üí∞\n–õ—É–∫ –∫–æ—Ä–æ–ª—è III+ - 30–ø–µ—á.\n–ü—Ä–æ–¥–∞–º 10 –ø–µ—á –ø–æ 400 –º–æ–Ω–µ—Ç"
JSON:
[{
  "item_name": "–ú–µ—á —Ä—ã—Ü–∞—Ä—è",
  "quantity": null,
  "item_grade": "[II]",
  "item_duration": "undefined",
  "price_for_one": 500,
  "offer_type": "sell",
  "currency": "money"
 },
 {
  "item_name": "–õ—É–∫ –∫–æ—Ä–æ–ª—è",
  "quantity": null,
  "item_grade": "[III+]",
  "item_duration": "undefined",
  "price_for_one": 30,
  "offer_type": "sell",
  "currency": "cookies"
 },
 {
  "item_name": "cookies",
  "quantity": 10,
  "item_grade": "undefined",
  "item_duration": "undefined",
  "price_for_one": 400,
  "offer_type": "sell",
  "currency": "money"
 }
 
]


"""


